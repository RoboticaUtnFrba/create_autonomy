<!--
Copyright (c) 2018 Intel Corporation
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
     http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
A launch file, derived from rgbd_launch and customized for Realsense ROS driver,
to publish XYZRGB point cloud like an OpenNI camera.

NOTICE: To use this launch file you must first install ros package rgbd_launch.
-->
<launch>
  <arg name="ns" default="create1" doc="Namespace of the robot"/>

  <arg name="manager" value="realsense2_camera_manager"/>

  <!-- rgbd_launch specific arguments -->
  <!-- Arguments for remapping all device namespaces -->
  <arg name="rgb"                         value="rgb" />
  <arg name="depth"                       value="depth" />
  <arg name="depth_registered_pub"        value="depth_registered" />
  <arg name="depth_registered"            value="depth_registered" />

  <!-- Disable bond topics by default -->
  <arg name="bond"                        value="false" />
  <arg name="respawn"                     value="$(arg bond)" />

  <!-- Processing Modules -->
  <arg name="rgb_processing"              value="true" />
  <arg name="debayer_processing"          value="false"/>
  <arg name="depth_processing"            value="true" />
  <arg name="depth_registered_processing" value="true" />
  <arg name="hw_registered_processing"    value="true" />

  <group ns="d435">

    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="align_depth"       value="true"/>
      <arg name="enable_pointcloud" value="false"/>
      <arg name="enable_sync"       value="true"/>
      <arg name="external_manager"  value="false"/>
      <arg name="filters"           value="pointcloud"/>
      <arg name="manager"           value="$(arg manager)"/>
      <arg name="publish_tf"        value="false"/>
      <arg name="publish_odom_tf"   value="false"/>

      <arg name="base_frame_id"          value="$(arg ns)/d435_link"/>
      <arg name="depth_frame_id"         value="$(arg ns)/d435_depth_frame"/>
      <arg name="color_frame_id"         value="$(arg ns)/d435_color_frame"/>
      <arg name="depth_optical_frame_id" value="$(arg ns)/d435_depth_optical_frame"/>
      <arg name="color_optical_frame_id" value="$(arg ns)/d435_color_optical_frame"/>

      <arg name="aligned_depth_to_color_frame_id" default="$(arg ns)/d435_color_optical_frame"/>
    </include>

    <!-- RGB processing -->
    <include if="$(arg rgb_processing)"
             file="$(find rgbd_launch)/launch/includes/rgb.launch.xml">
      <arg name="manager"                       value="$(arg manager)" />
      <arg name="respawn"                       value="$(arg respawn)" />
      <arg name="rgb"                           value="$(arg rgb)" />
      <arg name="debayer_processing"            value="$(arg debayer_processing)" />
    </include>

    <!-- Publish registered XYZRGB point cloud with hardware registered input (ROS Realsense depth alignment) -->
    <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered"
          args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)" respawn="$(arg respawn)">
      <remap from="rgb/image_rect_color"        to="$(arg rgb)/image_rect_color" />
      <remap from="rgb/camera_info"             to="$(arg rgb)/camera_info" />
      <remap from="depth_registered/image_rect" to="$(arg depth_registered)/image_raw" />
      <remap from="depth_registered/points"     to="$(arg depth_registered_pub)/points" />
    </node>

  </group>
</launch>
