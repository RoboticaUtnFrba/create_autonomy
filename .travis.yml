os: linux
dist: bionic

language: generic

compiler:
  - gcc

env:
  global:
    - CATKIN_WS=~/catkin_ws
    - CATKIN_WS_SRC=${CATKIN_WS}/src
    - CI_ROS_DISTRO="melodic"
    - CREATE_AUTONOMY_SRC=${CATKIN_WS_SRC}/create_autonomy

install:
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros-latest.list'
  - sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list'
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y libqt4-dev python-catkin-tools python-rosdep python3-vcstool wget
  # Install RTIMULib
  - bash ${TRAVIS_BUILD_DIR}/sensors/ca_imu/scripts/install_rtimulib.sh
  # Install dependencies
  - sudo rosdep init
  - rosdep update
  # Create workspace
  #
  - mkdir -p $CREATE_AUTONOMY_SRC
  # Clone manual dependencies to $CATKIN_WS_SRC
  - wget -q https://github.com/${TRAVIS_REPO_SLUG}/blob/${TRAVIS_COMMIT}/rpi.repos
  - /usr/bin/vcs import $CATKIN_WS_SRC < rpi.repos
  # Add ONLY the package under integration to the workspace using a symlink
  - ln -s $TRAVIS_BUILD_DIR $CREATE_AUTONOMY_SRC
  # Use rosdep to install all dependencies (including ROS itself)
  - cd $CATKIN_WS
  - rosdep install --from-paths ./ -i -y --rosdistro $CI_ROS_DISTRO

script:
  - source /opt/ros/$CI_ROS_DISTRO/setup.bash
  - cd $CATKIN_WS
  # Build packages
  - catkin_make -DCMAKE_BUILD_TYPE=Release
  # Run the tests, ensuring the path is set correctly.
  - source devel/setup.bash
  # Run tests
  # NOTE: GAZEBO TESTS FAIL IN PARALLEL
  - catkin_make run_tests -j1 && catkin_test_results
  # Lint package files ONLY for create_autonomy
  - sudo apt-get install -y python-catkin-lint
  - catkin lint -W2 --strict --explain $CREATE_AUTONOMY_SRC --ignore plugin_missing_install --ignore target_name_collision
  # Tips
  #
  # C++:
  # ----
  # sudo apt-get install astyle
  # find -regextype egrep -regex '.*\.[ch](pp)?$' -exec astyle '{}' --style=allman --indent=spaces=2 --pad-oper --unpad-paren --pad-header --convert-tabs \;
  #
  # Python:
  # -------
  # sudo pip install pep8ify
  # pep8ify -nw .
  - catkin_make roslint